# -*- coding: utf-8 -*-
"""demoRandomForest.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Jw77pEF4rq7L80e6p_niDd_p-dgCDNPw
"""

import numpy as np
import pandas as pd
from sklearn.datasets import make_classification

X,y = make_classification(n_samples=1000, n_features=5, n_informative=5, n_redundant=0)

df = pd.DataFrame(X, columns=['col1','col2','col3','col4','col5'])
df['target'] = y
df.shape
df.head()

#function for row sampling

def sample_rows(df,percent):
  return df.sample(int(percent*df.shape[0]), replace=True)

#function for freature sampling or coloumn sampling

def freature_sample(df,percent):
  cols = random.sample(df.columns.tolist(), int(percent*len(df.columns)))
  return df[cols]

# function for the combined sampling

def combined_sampling(df, row_percent, col_percent):
  new_df = sample_rows(df, row_percent)
  return sample_freature(new_df, col_percent)

#preparing data sets from row sampling for our three desicion tree classifier

df1 = sample_rows(df, 0.1)
df2 = sample_rows(df, 0.1)
df3 = sample_rows(df, 0.1)

df3.head()

from sklearn.tree import DecisionTreeClassifier

clf1 = DecisionTreeClassifier()
clf2 = DecisionTreeClassifier()
clf3 = DecisionTreeClassifier()

clf1.fit(df1.iloc[:,0:5],df1.iloc[:,-1])
clf2.fit(df2.iloc[:,0:5],df2.iloc[:,-1])
clf3.fit(df3.iloc[:,0:5],df3.iloc[:,-1])

from sklearn.tree import plot_tree
plot_tree(clf1)

plot_tree(clf2)

plot_tree(clf3)

clf1.predict(np.array([-1.007382,	-1.347487,-0.797282,	0.837043,	0.273666]).reshape(1,5))

clf2.predict(np.array([-1.007382,	-1.347487,-0.797282,	0.837043,	0.273666]).reshape(1,5))

clf3.predict(np.array([-1.007382,	-1.347487,-0.797282,	0.837043,	0.273666]).reshape(1,5))

"""Note:-All the three classifier gave 0 as the answer so by going by the majority we can say answer is 0. We can do same using the freature and combined sampling"""

